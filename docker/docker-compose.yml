version: "4.0"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: webhook-zookeeper
    ports:
      - "32181:32181"
    volumes:
      - zookeeper-data:/etc/kafka
    environment:
      - ZOOKEEPER_CLIENT_PORT=32181
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - render-worker-network

  kafka:
    image: confluentinc/cp-kafka
    restart: "on-failure"
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - kafka-data:/etc/kafka
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:32181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT_HOST://localhost:29092,PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
    depends_on:
      - zookeeper
    networks:
      - render-worker-network

  # http://localhost:8182/
  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8182:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - render-worker-network

  render-postgres:
    image: postgres:15.3
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    ports:
      - '5433:5432'
    volumes:
      - render-postgres-storage:/var/lib/postgresql/data
    networks:
      - render-worker-network

  main-postgres:
    image: postgres:15.3
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    ports:
      - '5432:5432'
    volumes:
      - main-postgres-storage:/var/lib/postgresql/data
    networks:
      - render-worker-network
  redis:
    image: redis:7.0.11
    ports:
      - "6379:6379"
    networks:
      - render-worker-network

  minio:
    image: minio/minio
    restart: always
    volumes:
      - minio-storage:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: password
    command: server --console-address ":9001" /data
    networks:
      - render-worker-network

networks:
  render-worker-network:

volumes:
  render-postgres-storage:
  main-postgres-storage:
  minio-storage:
  zookeeper-data:
  kafka-data: